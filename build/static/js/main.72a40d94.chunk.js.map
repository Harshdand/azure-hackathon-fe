{"version":3,"sources":["utils/token.js","axios.js","features/login/login.utils.js","features/login/login.jsx","features/login/login.api.js","hooks/useGetUser.js","common/user-search/user-search.api.js","common/user-search/user-search.jsx","common/user-card/user-card.jsx","features/bank/bank-user-search/bank-user-search.jsx","features/bank/bank-user-create/bank-user-create.jsx","features/bank/bank.api.js","features/bank/bank-user-update/bank-user-update.jsx","features/bank/bank-dashboard.jsx","features/bank/bank.jsx","features/govt/user-death/user-death.api.js","features/govt/death-dialog/death-dialog.jsx","features/govt/govt-user-search/govt-user-search.jsx","features/govt/govt-dashboard.jsx","features/govt/govt.jsx","features/user/user-dashboard.jsx","features/user/user.jsx","App.js","serviceWorker.js","index.js"],"names":["logout","localStorage","clear","axios","console","log","instance","axiosLib","create","baseURL","process","interceptors","request","use","config","customConfig","headers","url","Authorization","getItem","setupAxios","setLoginInfo","resp","data","setItem","JSON","stringify","token","columnProps","tokens","childrenGap","styles","root","width","backgroundColor","padding","margin","formProps","iconStyles","marginRight","Login","type","header","useState","success","status","setStatus","isLoading","setIsLoading","onSubmit","values","a","method","user","redirect","Container","Stack","className","horizontal","ContactIcon","style","BankIcon","CityNextIcon","Text","variant","MessageBar","messageBarType","MessageBarType","error","fontSize","to","initialValues","email","password","category","validateOnBlur","validateOnChange","validationSchema","Yup","required","handleChange","errors","noValidate","TextField","disabled","name","label","autoComplete","placeholder","autoFocus","onChange","errorMessage","Spinner","marginTop","labelPosition","PrimaryButton","text","useGetUser","parse","userSearch","params","pan","aadhaar","replace","payloadParams","UserSearch","onSearch","ProfileSearchIcon","min","matches","excludeEmptyString","message","MaskedTextField","mask","maxLength","textTransform","UserCard","details","firstName","middleName","lastName","phone","address","isAlive","deathDetails","Row","Col","sm","dod","line1","line2","city","state","country","zip","BankUserSearch","history","useHistory","path","useRouteMatch","searchResult","setSearchResult","value","warning","onClick","push","id","textAlign","BankUserCreate","setId","setMessage","formDisabled","setFormDisabled","payload","toUpperCase","BankUserUpdate","BankDashboard","setRefresh","farItems","key","iconProps","iconName","subMenuProps","items","CommandBar","render","props","Bank","confirmUserDeath","modalProps","isBlocking","main","dialogContentProps","DialogType","normal","title","subText","DeathDialog","showDialog","setShowDialog","userId","onConfirm","setDod","confirmDeath","Dialog","hidden","onDismiss","DatePicker","isRequired","maxDate","Date","onSelectDate","date","isoDate","toISOString","DialogFooter","DefaultButton","GovtUserSearch","isSuccessful","setIsSuccessful","setTimeout","GovtDashboard","Govt","UserDashboard","User","initializeIcons","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"6fAIaA,EAAS,WACpBC,aAAaC,SCsBAC,EAxBI,WACjBC,QAAQC,IAAI,SACZ,IAAMC,EAAWC,IAASC,OAAO,CAC/BC,QAASC,mDAgBX,OAbAJ,EAASK,aAAaC,QAAQC,KAAI,SAACC,GACjC,IAAMC,EAAeD,EASrB,OARAC,EAAaC,QAAU,CACrB,eAAgB,oBAGE,gBAAV,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQG,OACVF,EAAaC,QAAQE,cAArB,iBDfGjB,aAAakB,QAAQ,UCeqC,KAGxDJ,KAGFT,EAGKc,GCzBDC,EAAe,SAACC,GAAU,IAAD,EACAA,EAA5BC,YAD4B,MACrB,GADqB,IACAD,EAAjBN,eADiB,MACP,GADO,EAEpCf,aAAauB,QAAQ,OAAQC,KAAKC,UAAUH,IAC5CtB,aAAauB,QAAQ,QAASR,EAAQW,QCiBlCC,EAAc,CAClBC,OAAQ,CAAEC,YAAa,IACvBC,OAAQ,CACNC,KAAM,CACJC,MAAO,IACPC,gBAAiB,OACjBC,QAAS,OACTC,OAAQ,gBAKRC,EAAY,CAChBR,OAAQ,CAAEC,YAAa,KAGnBQ,EAAa,CACjBL,MAAO,OACPM,YAAa,QAqGAC,EAlGD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAAa,EACNC,mBAAS,CAAEC,SAAS,IADd,mBAC3BC,EAD2B,KACnBC,EADmB,OAEAH,oBAAS,GAFT,mBAE3BI,EAF2B,KAEhBC,EAFgB,KAI5BC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAEbH,GAAa,GAFA,SC1CV7C,EAAM,CACXiD,OAAQ,OACRnC,IAAK,aACLM,KD0C2B2B,IAHZ,OAIO,OADd5B,EAHO,QAIJuB,QACPxB,EAAaC,GACb0B,GAAa,GACbF,EAAU,CAAEO,KAAM/B,EAAKC,KAAMqB,SAAS,EAAMU,UAAU,KAEtDN,GAAa,GATF,gDAYbA,GAAa,GACbF,EAAU,CAAEF,SAAS,IAbR,yDAAH,sDAiBd,OACE,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBAAW5B,EAAX,CAAwB6B,UAAU,cAChC,kBAACD,EAAA,EAAD,CAAOE,YAAU,GACL,SAATjB,GAAmB,kBAACkB,EAAA,EAAD,CAAaC,MAAOtB,IAC9B,SAATG,GAAmB,kBAACoB,EAAA,EAAD,CAAUD,MAAOtB,IAC3B,SAATG,GAAmB,kBAACqB,EAAA,EAAD,CAAcF,MAAOtB,IACzC,kBAACyB,EAAA,EAAD,CAAMC,QAAQ,UAAUtB,KAExBG,EAAOD,SACP,kBAACqB,EAAA,EAAD,CACEC,eAAgBC,IAAeC,MAC/BR,MAAO,CAAES,SAAU,SAFrB,8BAODxB,EAAOS,UAAY,kBAAC,IAAD,CAAUgB,GAAE,WAAM7B,EAAN,gBAChC,kBAAC,IAAD,CACE8B,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,SAAUjC,GAEZkC,gBAAc,EACdC,kBAAkB,EAClBC,iBAAkBC,IAAW,CAC3BN,MAAOM,MAAaN,MAAM,uBAC1BC,SAAUK,MAAaC,SAAS,0BAElC9B,SAAUA,IAET,gBAAGC,EAAH,EAAGA,OAAQ8B,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,OAAzB,OACC,kBAAC,IAAD,CAAMC,YAAU,GACd,kBAAC1B,EAAA,EAAUnB,EACT,kBAAC8C,EAAA,EAAD,CACEC,SAAUrC,EACVsC,KAAK,QACL5C,KAAK,QACL6C,MAAM,QACNC,aAAa,MACbC,YAAY,oBACZC,WAAS,EACTC,SAAUV,EACVW,aAAcV,EAAOT,QAEvB,kBAACW,EAAA,EAAD,CACEC,SAAUrC,EACVsC,KAAK,WACL5C,KAAK,WACL6C,MAAM,WACNE,YAAY,aACZE,SAAUV,IAGXjC,GACC,kBAAC6C,EAAA,EAAD,CACEhC,MAAO,CAAEiC,UAAW,QACpBP,MAAM,gBACNQ,cAAc,UAIlB,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLvD,KAAK,SACL2C,SAAUrC,IAAcG,EAAOsB,QAAUtB,EAAOuB,mB,SEhIrDwB,EAAa,WACxB,MAAO,CAAE5C,KAAM5B,KAAKyE,MAAMjG,aAAakB,QAAQ,W,oCCCpCgF,EAAa,SAACC,GAAY,IAC/BC,EAAiBD,EAAjBC,IAAKC,EAAYF,EAAZE,QAGXA,GADAA,EAAUA,EAAQC,QAAQ,KAAM,KACdA,QAAQ,KAAM,IAEhC,IAAMC,EAAgB,GAUtB,OARIH,IACFG,EAAcH,IAAMA,GAGlBC,IACFE,EAAcF,QAAUA,GAGnBnG,EAAM,CACXiD,OAAQ,MACRnC,IAAK,SACLmF,OAAQI,KCNNnE,EAAY,CAChBR,OAAQ,CAAEC,YAAa,KAGnBQ,EAAa,CACjBL,MAAO,OACPM,YAAa,QAgGAkE,EA7FI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACD/D,oBAAS,GADR,mBAC5BI,EAD4B,KACjBC,EADiB,KAG7BC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAEbH,GAAa,GAFA,SAGMmD,EAAWjD,GAHjB,OAKO,OAFd5B,EAHO,QAKJuB,SACPG,GAAa,GACb0D,EAAS,CAAE9D,SAAS,EAAMS,KAAM/B,EAAKC,KAAKA,QAP/B,gDAUbyB,GAAa,GACb0D,EAAS,CAAE9D,SAAS,IAXP,yDAAH,sDAed,OACE,oCACE,kBAACY,EAAA,EAAD,CAAOE,YAAU,GACd,kBAACiD,EAAA,EAAD,CAAmB/C,MAAOtB,IAC3B,kBAACyB,EAAA,EAAD,CAAMC,QAAQ,UAAd,gCAGF,kBAAC,IAAD,CACEO,cAAe,CACb8B,IAAK,GACLC,QAAS,IAEX3B,gBAAc,EACdC,kBAAkB,EAClBC,iBAAkBC,IAAW,CAC3BuB,IAAKvB,MAAa8B,IAAI,GAAI,iCAC1BN,QAASxB,MAAa+B,QAAQ,SAAU,CACtCC,oBAAoB,EACpBC,QAAS,mCAGb9D,SAAUA,IAET,gBAAGC,EAAH,EAAGA,OAAQ8B,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,OAAzB,OACC,kBAAC,IAAD,CAAMC,YAAU,GACd,kBAAC1B,EAAA,EAAD,iBAAWnB,EAAX,CAAsBqB,YAAU,IAC9B,kBAACsD,EAAA,EAAD,CACE5B,SAAUrC,EACVsC,KAAK,UACL4B,KAAK,iBACL3B,MAAM,iBACNE,YAAY,eACZC,WAAS,EACTF,aAAa,MACb3B,MAAO,CAAE3B,MAAO,SAChByD,SAAUV,EACVW,aAAcV,EAAOqB,UAEvB,kBAACvC,EAAA,EAAD,CAAMC,QAAQ,QAAQJ,MAAO,CAAEiC,UAAW,SAA1C,MAGA,kBAACV,EAAA,EAAD,CACEC,SAAUrC,EACVsC,KAAK,MACL5C,KAAK,OACL6C,MAAM,kBACN4B,UAAW,GACX3B,aAAa,MACbC,YAAY,aACZ5B,MAAO,CAAE3B,MAAO,QAASkF,cAAe,aACxCzB,SAAUV,EACVW,aAAcV,EAAOoB,MAGvB,kBAACN,EAAA,EAAD,CACEC,KAAK,SACLvD,KAAK,SACLmB,MAAO,CAAE3B,MAAO,QAAS4D,UAAW,QACpCT,SAAUrC,KAAeG,EAAOoD,SAAWpD,EAAOmD,YAM3DtD,GACC,kBAAC6C,EAAA,EAAD,CACEhC,MAAO,CAAEiC,UAAW,QACpBP,MAAM,eACNQ,cAAc,YCzGlBxD,EAAa,CACjBL,MAAO,OACPM,YAAa,QAsHA6E,EAnHE,WAA4B,IAAD,yDAAP,GAAO,IAAxBC,eAAwB,MAAd,GAAc,IAYtCA,EAVFC,iBAFwC,MAE5B,GAF4B,IAYtCD,EATFE,kBAHwC,MAG3B,GAH2B,IAYtCF,EARFG,gBAJwC,MAI7B,GAJ6B,IAYtCH,EAPFI,aALwC,MAKhC,IALgC,IAYtCJ,EANF7C,aANwC,MAMhC,IANgC,IAYtC6C,EALFf,eAPwC,MAO9B,IAP8B,IAYtCe,EAJFhB,WARwC,MAQlC,IARkC,IAYtCgB,EAHFK,eATwC,MAS9B,GAT8B,EAUxCC,EAEEN,EAFFM,QAVwC,EAYtCN,EADFO,oBAXwC,MAWzB,GAXyB,EAc1C,OACE,oCACE,kBAACpE,EAAA,EAAD,CAAOE,YAAU,GACd,kBAACC,EAAA,EAAD,CAAaC,MAAOtB,IACrB,kBAACyB,EAAA,EAAD,CAAMC,QAAQ,UACXsD,EADH,IACeC,EADf,IAC4BC,IAG9B,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAChE,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,UAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6ByD,IAE/B,kBAACK,EAAA,EAAD,KACE,kBAAC/D,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,UAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6BQ,IAE/B,kBAACsD,EAAA,EAAD,KACE,kBAAC/D,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,YAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6BsC,KAGjC,kBAACuB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAChE,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,QAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6BqC,KAE7BsB,GACA,kBAACG,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAChE,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,kBAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6B4D,EAAaI,OAIhD,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC/D,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,cAKJ,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC/D,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,WAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6B0D,EAAQO,QAEvC,kBAACH,EAAA,EAAD,KACE,kBAAC/D,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,WAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6B0D,EAAQQ,SAGzC,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC/D,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,SAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6B0D,EAAQS,OAEvC,kBAACL,EAAA,EAAD,KACE,kBAAC/D,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,UAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6B0D,EAAQU,SAGzC,kBAACP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC/D,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,YAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6B0D,EAAQW,UAEvC,kBAACP,EAAA,EAAD,KACE,kBAAC/D,EAAA,EAAD,CAAMN,UAAU,YAAYO,QAAQ,cAApC,QAGA,kBAACD,EAAA,EAAD,CAAMC,QAAQ,cAAd,IAA6B0D,EAAQY,WCxG7C1G,EAAc,CAClBC,OAAQ,CAAEC,YAAa,IACvBC,OAAQ,CACNC,KAAM,CACJC,MAAO,IACPC,gBAAiB,OACjBC,QAAS,OACTC,OAAQ,eAgECmG,EA3DQ,WAAO,IAAD,IACrBC,EAAUC,cACRC,EAASC,cAATD,KAFmB,EAGa/F,mBAAS,CAC/CC,SAAS,IAJgB,mBAGpBgG,EAHoB,KAGNC,EAHM,KAW3B,OACE,oCACE,kBAACtF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBAAW5B,EAAX,CAAwB6B,UAAU,cAChC,kBAAC,EAAD,CAAYiD,SARH,SAACoC,GAChBD,EAAgBC,OAQRF,EAAahG,SACb,oCACE,kBAACqB,EAAA,EAAD,CACEC,eAAgBC,IAAe4E,QAC/BnF,MAAO,CAAES,SAAU,SAFrB,+CAOA,kBAAC0B,EAAA,EAAD,CACEC,KAAK,kBACLpC,MAAO,CAAE3B,MAAO,QAAS4D,UAAW,QACpCmD,QAAS,WACPR,EAAQS,KAAR,UAAgBP,EAAhB,qBAOC,OAAZE,QAAY,IAAZA,GAAA,UAAAA,EAAcvF,YAAd,eAAoB6F,KACnB,kBAAC1F,EAAA,EAAD,iBAAW5B,EAAX,CAAwB6B,UAAU,cAChC,kBAAC,EAAD,CAAU4D,QAASuB,EAAavF,QACnB,OAAZuF,QAAY,IAAZA,GAAA,UAAAA,EAAcvF,YAAd,eAAoBsE,UACnB,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACD,EAAA,EAAD,CAAKC,GAAI,EAAGnE,MAAO,CAAEuF,UAAW,UAC9B,kBAACpD,EAAA,EAAD,CACEC,KAAK,OACLpC,MAAO,CAAE3B,MAAO,SAChB+G,QAAS,WACPR,EAAQS,KAAR,UAAgBP,EAAhB,sB,SCrDd9G,EAAc,CAClBC,OAAQ,CAAEC,YAAa,IACvBC,OAAQ,CACNC,KAAM,CACJC,MAAO,IACPC,gBAAiB,OACjBC,QAAS,OACTC,OAAQ,eAqNCgH,EAhNQ,WACrB,IAAMZ,EAAUC,cADW,GAEVE,cAATD,KAC0B/F,oBAAS,IAHhB,mBAGpBI,EAHoB,KAGTC,EAHS,OAIPL,mBAAS,IAJF,mBAIpBuG,EAJoB,KAIhBG,EAJgB,OAKG1G,mBAAS,IALZ,mBAKpBoE,EALoB,KAKXuC,EALW,OAMa3G,oBAAS,GANtB,mBAMpB4G,EANoB,KAMNC,EANM,KAarBnH,EAAY,CAChBR,OAAQ,CAAEC,YAAa,KAGnBmB,EAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEAEbH,GAAa,GACPyG,EAHO,eAGQvG,EAHR,CAGgBmD,IAAKnD,EAAOmD,IAAIqD,gBAHhC,SC7BVvJ,EAAM,CACXiD,OAAQ,OACRnC,IAAI,UACJM,KD8BgCkI,IAJjB,OAKO,OADdnI,EAJO,QAKJuB,SACPG,GAAa,GACbwG,GAAgB,GAChBH,EAAK,OAAC/H,QAAD,IAACA,GAAD,UAACA,EAAMC,YAAP,iBAAC,EAAYA,YAAb,aAAC,EAAkB2H,IACxBI,EAAW,CAAE1G,SAAS,EAAMmE,QAAS,MAT1B,gDAYb/D,GAAa,GACbsG,EAAW,CAAE1G,SAAS,EAAOmE,QAAS,KAbzB,yDAAH,sDAiBd,OACE,oCACE,kBAACxD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBAAW5B,EAAX,CAAwB6B,UAAU,cAChC,kBAACD,EAAA,EAAD,CAAOE,YAAU,GACd,kBAACC,EAAA,EAAD,CAAaC,MA/BL,CACjB3B,MAAO,OACPM,YAAa,UA8BL,kBAACwB,EAAA,EAAD,CAAMC,QAAQ,UAAd,aAGF,kBAAC,IAAD,CACEO,cAAe,CACb+C,UAAW,GACXC,WAAY,GACZC,SAAU,GACVC,MAAO,GACPjD,MAAO,GACP6B,IAAK,GACLC,QAAS,IAEX3B,gBAAc,EACdC,kBAAkB,EAClBC,iBAAkBC,IAAW,CAC3BuB,IAAKvB,MAAa8B,IAAI,GAAI,iCAC1BN,QAASxB,MAAa+B,QAAQ,SAAU,CACtCC,oBAAoB,EACpBC,QAAS,mCAGb9D,SAAUA,IAET,cAAGC,OAAH,IAAW8B,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,OAAzB,OACC,kBAAC,IAAD,CAAMC,YAAU,GACd,kBAAC1B,EAAA,EAAD,iBAAWnB,EAAX,CAAsBqB,YAAU,IAC9B,kBAACyB,EAAA,EAAD,CACEC,SAAUrC,GAAawG,EACvBlE,KAAK,YACLC,MAAM,aACN4B,UAAW,GACXnC,UAAQ,EACRS,YAAY,aACZC,WAAS,EACTF,aAAa,MACb3B,MAAO,CAAE3B,MAAO,SAChByD,SAAUV,EACVW,aAAcV,EAAOqC,YAEvB,kBAACnC,EAAA,EAAD,CACEC,SAAUrC,GAAawG,EACvBlE,KAAK,aACL6B,UAAW,GACX5B,MAAM,cACNE,YAAY,cACZD,aAAa,MACb3B,MAAO,CAAE3B,MAAO,SAChByD,SAAUV,EACVW,aAAcV,EAAOsC,aAEvB,kBAACpC,EAAA,EAAD,CACEC,SAAUrC,GAAawG,EACvBlE,KAAK,WACL6B,UAAW,GACXnC,UAAQ,EACRO,MAAM,YACNE,YAAY,YACZD,aAAa,MACb3B,MAAO,CAAE3B,MAAO,SAChByD,SAAUV,EACVW,aAAcV,EAAOuC,YAIzB,kBAAChE,EAAA,EAAD,iBAAWnB,EAAX,CAAsBqB,YAAU,IAC9B,kBAACyB,EAAA,EAAD,CACEC,SAAUrC,GAAawG,EACvBlE,KAAK,QACL5C,KAAK,SACL6C,MAAM,eACNP,UAAQ,EACRS,YAAY,wBACZD,aAAa,MACb3B,MAAO,CAAE3B,MAAO,SAChByD,SAAUV,EACVW,aAAcV,EAAOwC,QAEvB,kBAACtC,EAAA,EAAD,CACEC,SAAUrC,GAAawG,EACvBlE,KAAK,QACLC,MAAM,QACN4B,UAAW,IACX1B,YAAY,QACZD,aAAa,MACb3B,MAAO,CAAE3B,MAAO,SAChByD,SAAUV,EACVW,aAAcV,EAAOT,SAIzB,kBAAChB,EAAA,EAAD,iBAAWnB,EAAX,CAAsBqB,YAAU,IAC9B,kBAACsD,EAAA,EAAD,CACE5B,SAAUrC,GAAawG,EACvBlE,KAAK,UACL4B,KAAK,iBACL3B,MAAM,iBACNP,UAAQ,EACRS,YAAY,eACZD,aAAa,MACb3B,MAAO,CAAE3B,MAAO,SAChByD,SAAUV,EACVW,aAAcV,EAAOqB,UAEvB,kBAACnB,EAAA,EAAD,CACEC,SAAUrC,GAAawG,EACvBlE,KAAK,MACL5C,KAAK,OACL6C,MAAM,kBACN4B,UAAW,GACXnC,UAAQ,EACRQ,aAAa,MACbC,YAAY,aACZ5B,MAAO,CAAE3B,MAAO,QAASkF,cAAe,aACxCzB,SAAUV,EACVW,aAAcV,EAAOoB,OAIzB,kBAACN,EAAA,EAAD,CACEC,KAAK,SACLvD,KAAK,SACL2C,SAAUrC,GAAawG,EACvB3F,MAAO,CAAE3B,MAAO,QAAS4D,UAAW,cAK3C9C,GACC,kBAAC6C,EAAA,EAAD,CACEhC,MAAO,CAAEiC,UAAW,QACpBP,MAAM,mBACNQ,cAAc,WAGhB/C,GAAagE,EAAQnE,SACrB,oCACE,kBAACqB,EAAA,EAAD,CACEC,eAAgBC,IAAevB,QAC/BgB,MAAO,CAAES,SAAU,SAFrB,kCAOA,kBAAC0B,EAAA,EAAD,CACEC,KAAK,OACLpC,MAAO,CAAE3B,MAAO,QAAS4D,UAAW,QACpCmD,QAAS,WACPR,EAAQS,KAAR,sCAA4CC,SAMlDnG,IAAiC,IAApBgE,EAAQnE,SACrB,kBAACqB,EAAA,EAAD,CACEC,eAAgBC,IAAe4E,QAC/BnF,MAAO,CAAES,SAAU,SAFrB,0DErNNzC,EAAc,CAClBC,OAAQ,CAAEC,YAAa,IACvBC,OAAQ,CACNC,KAAM,CACJC,MAAO,IACPC,gBAAiB,OACjBC,QAAS,OACTC,OAAQ,eAgECuH,GA3DQ,WAAO,IAAD,IACrBnB,EAAUC,cACRC,EAASC,cAATD,KAFmB,EAGa/F,mBAAS,CAC/CC,SAAS,IAJgB,mBAGpBgG,EAHoB,KAGNC,EAHM,KAW3B,OACE,oCACE,kBAACtF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBAAW5B,EAAX,CAAwB6B,UAAU,cAChC,kBAAC,EAAD,CAAYiD,SARH,SAACoC,GAChBD,EAAgBC,OAQRF,EAAahG,SACb,oCACE,kBAACqB,EAAA,EAAD,CACEC,eAAgBC,IAAe4E,QAC/BnF,MAAO,CAAES,SAAU,SAFrB,+CAOA,kBAAC0B,EAAA,EAAD,CACEC,KAAK,kBACLpC,MAAO,CAAE3B,MAAO,QAAS4D,UAAW,QACpCmD,QAAS,WACPR,EAAQS,KAAR,UAAgBP,EAAhB,qBAOC,OAAZE,QAAY,IAAZA,GAAA,UAAAA,EAAcvF,YAAd,eAAoB6F,KACnB,kBAAC1F,EAAA,EAAD,iBAAW5B,EAAX,CAAwB6B,UAAU,cAChC,kBAAC,EAAD,CAAU4D,QAASuB,EAAavF,QACnB,OAAZuF,QAAY,IAAZA,GAAA,UAAAA,EAAcvF,YAAd,eAAoBsE,UACnB,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACD,EAAA,EAAD,CAAKC,GAAI,EAAGnE,MAAO,CAAEuF,UAAW,UAC9B,kBAACpD,EAAA,EAAD,CACEC,KAAK,OACLpC,MAAO,CAAE3B,MAAO,SAChB+G,QAAS,WACPR,EAAQS,KAAR,UAAgBP,EAAhB,sBCPLkB,GAvDO,WAAO,IAAD,EACHjH,oBAAS,GAAvBkH,EADiB,oBAElBnB,EAASC,cAATD,KACArF,EAAS4C,IAAT5C,KASFyG,EAAW,CACf,CACEC,IAAK,OACL/D,KAAK,GAAD,cAAK3C,QAAL,IAAKA,OAAL,EAAKA,EAAMiE,UAAX,mBAAwBjE,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMmE,UAClCwC,UAAW,CAAEC,SAAU,WACvBC,aAAc,CACZC,MAAO,CACL,CACEJ,IAAK,SACL/D,KAAM,SACNgE,UAAW,CAAEC,SAAU,cACvBjB,QAAS,WACPhJ,IACA6J,UAQZ,OACE,6BACE,kBAACO,EAAA,EAAD,CAAYD,MA/BF,CACZ,CACEJ,IAAK,OACL/D,KAAM,iBACNpC,MAAO,CAAES,SAAU,QACnB2F,UAAW,CAAEC,SAAU,UA0BGH,SAAUA,EAAUrG,UAAU,cACxD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEiF,KAAI,UAAKA,EAAL,aACJ2B,OAAQ,SAACC,GAAD,OAAW,kBAAC,EAAmBA,MAEzC,kBAAC,IAAD,CACE5B,KAAI,UAAKA,EAAL,oBACJ2B,OAAQ,SAACC,GAAD,OAAW,kBAAC,GAAmBA,MAEzC,kBAAC,IAAD,CACE5B,KAAI,UAAKA,GACT2B,OAAQ,SAACC,GAAD,OAAW,kBAAC,EAAmBA,QAGzCjH,GAAQ,kBAAC,IAAD,CAAUiB,GAAE,kBCjCbiG,GArBF,WAAO,IACV7B,EAASC,cAATD,KAER,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,KAAI,UAAKA,EAAL,UACJ2B,OAAQ,SAACC,GAAD,OACN,kBAAC,EAAD,iBAAWA,EAAX,CAAkB7H,KAAK,OAAOC,OAAO,mBAGzC,kBAAC,IAAD,CACEgG,KAAI,UAAKA,EAAL,cACJ2B,OAAQ,SAACC,GAAD,OAAW,kBAAC,GAAkBA,S,0DCjBnCE,GAAmB,SAACxC,EAAKkB,GACpC,OAAO/I,EAAM,CACXiD,OAAQ,OACRnC,IAAK,eACLM,KAAM,CAAEyG,MAAKkB,SCMXuB,GAAa,CACjBC,YAAY,EACZ3I,OAAQ,CAAE4I,KAAM,CAAE1I,MAAO,WAGrB2I,GAAqB,CACzBnI,KAAMoI,KAAWC,OACjBC,MAAO,gBACPC,QAAS,4CAwEIC,GArEK,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,cAAeC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAAgB,EAClD1I,mBAAS,IADyC,mBACjEqF,EADiE,KAC5DsD,EAD4D,OAEtC3I,oBAAS,GAF6B,mBAEjEI,EAFiE,KAEtDC,EAFsD,KAIlEuI,EAAY,uCAAG,sBAAApI,EAAA,0DACf6E,IAAOoD,EADQ,iCAGfpI,GAAa,GAHE,SAIIwH,GAAiBxC,EAAKoD,GAJ1B,OAMK,MANL,OAMNvI,SACPG,GAAa,GACbqI,EAAU,CAAEzI,SAAS,KARR,gDAWfI,GAAa,GACbqI,EAAU,CAAEzI,SAAS,IAZN,yDAAH,qDAiBlB,OACE,kBAAC4I,GAAA,EAAD,CACEC,QAASP,EACTQ,UAAW,WACJ3I,GACHoI,GAAc,IAGlBP,mBAAoBA,GACpBH,WAAYA,IAEZ,kBAACkB,GAAA,EAAD,CACEC,YAAU,EACVtG,MAAM,gBACNF,SAAUrC,EACV8I,QAAS,IAAIC,KACbhD,MAAOd,EAAM,IAAI8D,KAAK9D,GAAO,GAC7BxC,YAAY,mBACZuG,aAAc,SAACC,GACb,IAAMC,EAAUD,EAAKE,cACrBZ,EAAOW,MAGVlJ,GACC,kBAAC6C,EAAA,EAAD,CACEhC,MAAO,CAAEiC,UAAW,QACpBP,MAAM,4BACNQ,cAAc,UAGlB,kBAACqG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEhH,SAAUrC,EACViG,QAAS,WACPmC,GAAc,IAEhBnF,KAAK,WAEP,kBAACD,EAAA,EAAD,CACEiD,QAASuC,EACTvF,KAAK,UACLZ,SAAUrC,OCvEdnB,GAAc,CAClBC,OAAQ,CAAEC,YAAa,IACvBC,OAAQ,CACNC,KAAM,CACJC,MAAO,IACPC,gBAAiB,OACjBC,QAAS,OACTC,OAAQ,eAkFCiK,GA7EQ,WAAO,IAAD,QACa1J,mBAAS,CAC/CC,SAAS,IAFgB,mBACpBgG,EADoB,KACNC,EADM,OAIalG,oBAAS,GAJtB,mBAIpB2J,EAJoB,KAINC,EAJM,OAMS5J,oBAAS,GANlB,mBAMpBuI,EANoB,KAMRC,EANQ,KAY3B,OACE,oCACE,kBAAC5H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBAAW5B,GAAX,CAAwB6B,UAAU,cAChC,kBAAC,EAAD,CAAYiD,SARH,SAACoC,GAChBD,EAAgBC,OAQRF,EAAahG,SACb,oCACE,kBAACqB,EAAA,EAAD,CACEC,eAAgBC,IAAe4E,QAC/BnF,MAAO,CAAES,SAAU,SAFrB,2FAWPiI,GACC,kBAAC/I,EAAA,EAAD,CAAWK,MAAO,CAAEzB,QAAS,WAC3B,kBAAC8B,EAAA,EAAD,CACEC,eAAgBC,IAAevB,QAC/BgB,MAAO,CAAES,SAAU,SAFrB,4BAQS,OAAZuE,QAAY,IAAZA,GAAA,UAAAA,EAAcvF,YAAd,eAAoB6F,MAAOoD,GAC1B,kBAAC9I,EAAA,EAAD,iBAAW5B,GAAX,CAAwB6B,UAAU,cAChC,kBAAC,EAAD,CAAU4D,QAASuB,EAAavF,QACnB,OAAZuF,QAAY,IAAZA,GAAA,UAAAA,EAAcvF,YAAd,eAAoBsE,UACnB,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACD,EAAA,EAAD,CAAKC,GAAI,EAAGnE,MAAO,CAAEuF,UAAW,UAC9B,kBAACpD,EAAA,EAAD,CACEC,KAAK,eACLpC,MAAO,CAAE3B,MAAO,SAChB+G,QAAS,WACPmC,GAAc,SAS5B,kBAAC,GAAD,CACED,WAAYA,EACZC,cAAeA,EACfC,OAAM,OAAExC,QAAF,IAAEA,GAAF,UAAEA,EAAcvF,YAAhB,aAAE,EAAoB6F,GAC5BmC,UAAW,SAACvC,GACVyD,EAAgBzD,EAAMlG,SACtB4J,YAAW,WACTD,GAAgB,GAChB1D,EAAgB,CAAEjG,SAAS,MAC1B,KACHuI,GAAc,QC1CTsB,GA/CO,WAAO,IAAD,EACH9J,oBAAS,GAAvBkH,EADiB,oBAElBnB,EAASC,cAATD,KACArF,EAAS4C,IAAT5C,KASFyG,EAAW,CACf,CACEC,IAAK,OACL/D,KAAK,GAAD,cAAK3C,QAAL,IAAKA,OAAL,EAAKA,EAAMiE,UAAX,mBAAwBjE,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMmE,UAClCwC,UAAW,CAAEC,SAAU,WACvBC,aAAc,CACZC,MAAO,CACL,CACEJ,IAAK,SACL/D,KAAM,SACNgE,UAAW,CAAEC,SAAU,cACvBjB,QAAS,WACPhJ,IACA6J,GAAW,SAQvB,OACE,6BACE,kBAACO,EAAA,EAAD,CAAYD,MA/BF,CACZ,CACEJ,IAAK,OACLnG,MAAO,CAAES,SAAU,QACnB2B,KAAM,iBACNgE,UAAW,CAAEC,SAAU,cA0BGH,SAAUA,IACpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEpB,KAAI,UAAKA,GACT2B,OAAQ,SAACC,GAAD,OAAW,kBAAC,GAAmBA,QAGzCjH,GAAQ,kBAAC,IAAD,CAAUiB,GAAE,kBCvBboI,GArBF,WAAO,IACVhE,EAASC,cAATD,KAER,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,KAAI,UAAKA,EAAL,UACJ2B,OAAQ,SAACC,GAAD,OACN,kBAAC,EAAD,iBAAWA,EAAX,CAAkB7H,KAAK,OAAOC,OAAO,mBAGzC,kBAAC,IAAD,CACEgG,KAAI,UAAKA,EAAL,cACJ2B,OAAQ,SAACC,GAAD,OAAW,kBAAC,GAAkBA,SC4BjCqC,GAzCO,WAAO,IAAD,EACHhK,oBAAS,GAAvBkH,EADiB,oBAElBxG,EAAS4C,IAAT5C,KASFyG,EAAW,CACf,CACEC,IAAK,OACL/D,KAAK,GAAD,cAAK3C,QAAL,IAAKA,OAAL,EAAKA,EAAMiE,UAAX,mBAAwBjE,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMmE,UAClCwC,UAAW,CAAEC,SAAU,WACvBC,aAAc,CACZC,MAAO,CACL,CACEJ,IAAK,SACL/D,KAAM,SACNgE,UAAW,CAAEC,SAAU,cACvBjB,QAAS,WACPhJ,IACA6J,GAAW,SAQvB,OACE,6BACE,kBAACO,EAAA,EAAD,CAAYD,MA/BF,CACZ,CACEJ,IAAK,OACLnG,MAAO,CAAES,SAAU,QACnB2B,KAAM,iBACNgE,UAAW,CAAEC,SAAU,aA0BGH,SAAUA,IACpC,gDACEzG,GAAQ,kBAAC,IAAD,CAAUiB,GAAE,kBChBbsI,GArBF,WAAO,IACVlE,EAASC,cAATD,KAER,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,KAAI,UAAKA,EAAL,UACJ2B,OAAQ,SAACC,GAAD,OACN,kBAAC,EAAD,iBAAWA,EAAX,CAAkB7H,KAAK,OAAOC,OAAO,mBAGzC,kBAAC,IAAD,CACEgG,KAAI,UAAKA,EAAL,cACJ2B,OAAQ,SAACC,GAAD,OAAW,kBAAC,GAAkBA,SCJhDuC,cAuBeC,OArBf,WACE,OACE,yBAAKrJ,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiF,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,IAAI2B,OAAQ,kBAAM,kBAAC,IAAD,CAAU/F,GAAG,uBCnBjCyI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAAS/C,OACP,kBAAC,IAAMgD,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1J,GACLhE,QAAQgE,MAAMA,EAAM2C,c","file":"static/js/main.72a40d94.chunk.js","sourcesContent":["export const getToken = () => {\n  return localStorage.getItem('token');\n};\n\nexport const logout = () => {\n  localStorage.clear();\n};\n","import { default as axiosLib } from 'axios';\nimport { getToken } from './utils/token';\n\nconst setupAxios = () => {\n  console.log('axios');\n  const instance = axiosLib.create({\n    baseURL: process.env.REACT_APP_BASE_URL,\n  });\n\n  instance.interceptors.request.use((config) => {\n    const customConfig = config;\n    customConfig.headers = {\n      'Content-Type': 'application/json',\n    };\n\n    if (config?.url !== 'auth/login') {\n      customConfig.headers.Authorization = `Bearer ${getToken() || ''}`;\n    }\n\n    return customConfig;\n  });\n\n  return instance;\n};\n\nconst axios = setupAxios();\n\nexport default axios;\n","export const setLoginInfo = (resp) => {\n  const { data = {}, headers = {} } = resp;\n  localStorage.setItem('user', JSON.stringify(data));\n  localStorage.setItem('token', headers.token);\n};\n","import React, { useState } from 'react';\nimport {\n  TextField,\n  Stack,\n  PrimaryButton,\n  Text,\n  MessageBar,\n  MessageBarType,\n  Spinner,\n} from '@fluentui/react';\nimport { ContactIcon, BankIcon, CityNextIcon } from '@fluentui/react-icons';\nimport { Container } from 'reactstrap';\nimport { Formik, Form } from 'formik';\nimport { Redirect } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport './login.css';\nimport { login } from './login.api';\nimport { setLoginInfo } from './login.utils';\n\nconst columnProps = {\n  tokens: { childrenGap: 15 },\n  styles: {\n    root: {\n      width: 400,\n      backgroundColor: '#fff',\n      padding: '40px',\n      margin: '200px auto',\n    },\n  },\n};\n\nconst formProps = {\n  tokens: { childrenGap: 15 },\n};\n\nconst iconStyles = {\n  width: '25px',\n  marginRight: '15px',\n};\n\nconst Login = ({ type, header }) => {\n  const [status, setStatus] = useState({ success: true });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSubmit = async (values) => {\n    try {\n      setIsLoading(true);\n      const resp = await login(values);\n      if (resp.status === 200) {\n        setLoginInfo(resp);\n        setIsLoading(false);\n        setStatus({ user: resp.data, success: true, redirect: true });\n      } else {\n        setIsLoading(false);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setStatus({ success: false });\n    }\n  };\n\n  return (\n    <Container>\n      <Stack {...columnProps} className=\"hc-shadow\">\n        <Stack horizontal>\n          {type === 'user' && <ContactIcon style={iconStyles} />}\n          {type === 'bank' && <BankIcon style={iconStyles} />}\n          {type === 'govt' && <CityNextIcon style={iconStyles} />}\n          <Text variant=\"xLarge\">{header}</Text>\n        </Stack>\n        {!status.success && (\n          <MessageBar\n            messageBarType={MessageBarType.error}\n            style={{ fontSize: '16px' }}\n          >\n            Invalid email or password.\n          </MessageBar>\n        )}\n        {status.redirect && <Redirect to={`/${type}/dashboard`} />}\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n            category: type,\n          }}\n          validateOnBlur\n          validateOnChange={false}\n          validationSchema={Yup.object({\n            email: Yup.string().email('Enter a valid email'),\n            password: Yup.string().required('Password is required'),\n          })}\n          onSubmit={onSubmit}\n        >\n          {({ values, handleChange, errors }) => (\n            <Form noValidate>\n              <Stack {...formProps}>\n                <TextField\n                  disabled={isLoading}\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  autoComplete=\"off\"\n                  placeholder=\"example@gmail.com\"\n                  autoFocus\n                  onChange={handleChange}\n                  errorMessage={errors.email}\n                />\n                <TextField\n                  disabled={isLoading}\n                  name=\"password\"\n                  type=\"password\"\n                  label=\"Password\"\n                  placeholder=\"**********\"\n                  onChange={handleChange}\n                />\n\n                {isLoading && (\n                  <Spinner\n                    style={{ marginTop: '10px' }}\n                    label=\"Logging In...\"\n                    labelPosition=\"right\"\n                  />\n                )}\n\n                <PrimaryButton\n                  text=\"LOGIN\"\n                  type=\"submit\"\n                  disabled={isLoading || !values.email || !values.password}\n                />\n              </Stack>\n            </Form>\n          )}\n        </Formik>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default Login;\n","import axios from '../../axios';\n\nexport const login = (data) => {\n  return axios({\n    method: 'POST',\n    url: 'auth/login',\n    data,\n  });\n};\n","export const useGetUser = () => {\n  return { user: JSON.parse(localStorage.getItem('user')) };\n};\n","import axios from '../../axios';\n\nexport const userSearch = (params) => {\n  let { pan, aadhaar } = params;\n\n  aadhaar = aadhaar.replace(/-/g, '');\n  aadhaar = aadhaar.replace(/_/g, '');\n\n  const payloadParams = {};\n\n  if (pan) {\n    payloadParams.pan = pan;\n  }\n\n  if (aadhaar) {\n    payloadParams.aadhaar = aadhaar;\n  }\n\n  return axios({\n    method: 'GET',\n    url: 'person',\n    params: payloadParams,\n  });\n};\n","import React, { useState } from 'react';\nimport {\n  TextField,\n  Stack,\n  PrimaryButton,\n  Text,\n  MaskedTextField,\n  Spinner,\n} from '@fluentui/react';\nimport { ProfileSearchIcon } from '@fluentui/react-icons';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { userSearch } from './user-search.api';\n\nconst formProps = {\n  tokens: { childrenGap: 15 },\n};\n\nconst iconStyles = {\n  width: '25px',\n  marginRight: '15px',\n};\n\nconst UserSearch = ({ onSearch }) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSubmit = async (values) => {\n    try {\n      setIsLoading(true);\n      const resp = await userSearch(values);\n\n      if (resp.status === 200) {\n        setIsLoading(false);\n        onSearch({ success: true, user: resp.data.data });\n      }\n    } catch (error) {\n      setIsLoading(false);\n      onSearch({ success: false });\n    }\n  };\n\n  return (\n    <>\n      <Stack horizontal>\n        {<ProfileSearchIcon style={iconStyles} />}\n        <Text variant=\"xLarge\">Search for an existing User</Text>\n      </Stack>\n\n      <Formik\n        initialValues={{\n          pan: '',\n          aadhaar: '',\n        }}\n        validateOnBlur\n        validateOnChange={false}\n        validationSchema={Yup.object({\n          pan: Yup.string().min(10, 'Enter a valid PAN Card Number'),\n          aadhaar: Yup.string().matches(/[0-9]-/, {\n            excludeEmptyString: true,\n            message: 'Enter a valid Aadhaar Number',\n          }),\n        })}\n        onSubmit={onSubmit}\n      >\n        {({ values, handleChange, errors }) => (\n          <Form noValidate>\n            <Stack {...formProps} horizontal>\n              <MaskedTextField\n                disabled={isLoading}\n                name=\"aadhaar\"\n                mask=\"9999-9999-9999\"\n                label=\"Aadhaar Number\"\n                placeholder=\"999999999999\"\n                autoFocus\n                autoComplete=\"off\"\n                style={{ width: '230px' }}\n                onChange={handleChange}\n                errorMessage={errors.aadhaar}\n              />\n              <Text variant=\"large\" style={{ marginTop: '30px' }}>\n                or\n              </Text>\n              <TextField\n                disabled={isLoading}\n                name=\"pan\"\n                type=\"text\"\n                label=\"PAN Card Number\"\n                maxLength={10}\n                autoComplete=\"off\"\n                placeholder=\"ABCDE11223\"\n                style={{ width: '230px', textTransform: 'uppercase' }}\n                onChange={handleChange}\n                errorMessage={errors.pan}\n              />\n\n              <PrimaryButton\n                text=\"SEARCH\"\n                type=\"submit\"\n                style={{ width: '200px', marginTop: '30px' }}\n                disabled={isLoading || !(values.aadhaar || values.pan)}\n              />\n            </Stack>\n          </Form>\n        )}\n      </Formik>\n      {isLoading && (\n        <Spinner\n          style={{ marginTop: '10px' }}\n          label=\"Searching...\"\n          labelPosition=\"right\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default UserSearch;\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport { Stack, Text } from '@fluentui/react';\nimport { ContactIcon } from '@fluentui/react-icons';\n\nconst iconStyles = {\n  width: '25px',\n  marginRight: '15px',\n};\n\nconst UserCard = ({ details = {} } = {}) => {\n  const {\n    firstName = '',\n    middleName = '',\n    lastName = '',\n    phone = '-',\n    email = '-',\n    aadhaar = '-',\n    pan = '-',\n    address = {},\n    isAlive,\n    deathDetails = {},\n  } = details;\n\n  return (\n    <>\n      <Stack horizontal>\n        {<ContactIcon style={iconStyles} />}\n        <Text variant=\"xLarge\">\n          {firstName} {middleName} {lastName}\n        </Text>\n      </Stack>\n      <Row>\n        <Col sm={3}>\n          <Text className=\"font-bold\" variant=\"mediumPlus\">\n            Phone:\n          </Text>\n          <Text variant=\"mediumPlus\"> {phone}</Text>\n        </Col>\n        <Col>\n          <Text className=\"font-bold\" variant=\"mediumPlus\">\n            Email:\n          </Text>\n          <Text variant=\"mediumPlus\"> {email}</Text>\n        </Col>\n        <Col>\n          <Text className=\"font-bold\" variant=\"mediumPlus\">\n            Aadhaar:\n          </Text>\n          <Text variant=\"mediumPlus\"> {aadhaar}</Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={3}>\n          <Text className=\"font-bold\" variant=\"mediumPlus\">\n            PAN:\n          </Text>\n          <Text variant=\"mediumPlus\"> {pan}</Text>\n        </Col>\n        {!isAlive && (\n          <Col sm={3}>\n            <Text className=\"font-bold\" variant=\"mediumPlus\">\n              Date of Death:\n            </Text>\n            <Text variant=\"mediumPlus\"> {deathDetails.dod}</Text>\n          </Col>\n        )}\n      </Row>\n      <Row>\n        <Col sm={6}>\n          <Row>\n            <Col>\n              <Text className=\"font-bold\" variant=\"mediumPlus\">\n                Address:\n              </Text>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Text className=\"font-bold\" variant=\"mediumPlus\">\n                Line 1:\n              </Text>\n              <Text variant=\"mediumPlus\"> {address.line1}</Text>\n            </Col>\n            <Col>\n              <Text className=\"font-bold\" variant=\"mediumPlus\">\n                Line 2:\n              </Text>\n              <Text variant=\"mediumPlus\"> {address.line2}</Text>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Text className=\"font-bold\" variant=\"mediumPlus\">\n                City:\n              </Text>\n              <Text variant=\"mediumPlus\"> {address.city}</Text>\n            </Col>\n            <Col>\n              <Text className=\"font-bold\" variant=\"mediumPlus\">\n                State:\n              </Text>\n              <Text variant=\"mediumPlus\"> {address.state}</Text>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Text className=\"font-bold\" variant=\"mediumPlus\">\n                Country:\n              </Text>\n              <Text variant=\"mediumPlus\"> {address.country}</Text>\n            </Col>\n            <Col>\n              <Text className=\"font-bold\" variant=\"mediumPlus\">\n                ZIP:\n              </Text>\n              <Text variant=\"mediumPlus\"> {address.zip}</Text>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default UserCard;\n","import React, { useState } from 'react';\nimport {\n  Stack,\n  PrimaryButton,\n  MessageBar,\n  MessageBarType,\n} from '@fluentui/react';\nimport { Container, Row, Col } from 'reactstrap';\nimport UserSearch from '../../../common/user-search/user-search';\nimport UserCard from '../../../common/user-card/user-card';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nconst columnProps = {\n  tokens: { childrenGap: 15 },\n  styles: {\n    root: {\n      width: 800,\n      backgroundColor: '#fff',\n      padding: '40px',\n      margin: '20px auto',\n    },\n  },\n};\n\nconst BankUserSearch = () => {\n  const history = useHistory();\n  const { path } = useRouteMatch();\n  const [searchResult, setSearchResult] = useState({\n    success: true,\n  });\n\n  const onSearch = (value) => {\n    setSearchResult(value);\n  };\n\n  return (\n    <>\n      <Container>\n        <Stack {...columnProps} className=\"hc-shadow\">\n          <UserSearch onSearch={onSearch}></UserSearch>\n          {!searchResult.success && (\n            <>\n              <MessageBar\n                messageBarType={MessageBarType.warning}\n                style={{ fontSize: '16px' }}\n              >\n                Unable to find the user with provided info.\n              </MessageBar>\n\n              <PrimaryButton\n                text=\"CREATE NEW USER\"\n                style={{ width: '180px', marginTop: '30px' }}\n                onClick={() => {\n                  history.push(`${path}/user/new`);\n                }}\n              />\n            </>\n          )}\n        </Stack>\n      </Container>\n      {searchResult?.user?.id && (\n        <Stack {...columnProps} className=\"hc-shadow\">\n          <UserCard details={searchResult.user} />\n          {searchResult?.user?.isAlive && (\n            <Row>\n              <Col sm={8}></Col>\n              <Col sm={4} style={{ textAlign: 'right' }}>\n                <PrimaryButton\n                  text=\"NEXT\"\n                  style={{ width: '180px' }}\n                  onClick={() => {\n                    history.push(`${path}/user/new`);\n                  }}\n                />\n              </Col>\n            </Row>\n          )}\n        </Stack>\n      )}\n    </>\n  );\n};\n\nexport default BankUserSearch;\n","import React, { useState } from 'react';\nimport { ContactIcon } from '@fluentui/react-icons';\nimport {\n  Stack,\n  PrimaryButton,\n  MessageBar,\n  MessageBarType,\n  Text,\n  MaskedTextField,\n  TextField,\n  Spinner,\n} from '@fluentui/react';\nimport { Container } from 'reactstrap';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { createUser } from '../bank.api';\n\nconst columnProps = {\n  tokens: { childrenGap: 15 },\n  styles: {\n    root: {\n      width: 800,\n      backgroundColor: '#fff',\n      padding: '40px',\n      margin: '20px auto',\n    },\n  },\n};\n\nconst BankUserCreate = () => {\n  const history = useHistory();\n  const { path } = useRouteMatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [id, setId] = useState('');\n  const [message, setMessage] = useState({});\n  const [formDisabled, setFormDisabled] = useState(false);\n\n  const iconStyles = {\n    width: '25px',\n    marginRight: '15px',\n  };\n\n  const formProps = {\n    tokens: { childrenGap: 15 },\n  };\n\n  const onSubmit = async (values) => {\n    try {\n      setIsLoading(true);\n      const payload = { ...values, pan: values.pan.toUpperCase() };\n      const resp = await createUser(payload);\n      if (resp.status === 200) {\n        setIsLoading(false);\n        setFormDisabled(true);\n        setId(resp?.data?.data?.id);\n        setMessage({ success: true, message: '' });\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setMessage({ success: false, message: '' });\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <Stack {...columnProps} className=\"hc-shadow\">\n          <Stack horizontal>\n            {<ContactIcon style={iconStyles} />}\n            <Text variant=\"xLarge\">New User</Text>\n          </Stack>\n\n          <Formik\n            initialValues={{\n              firstName: '',\n              middleName: '',\n              lastName: '',\n              phone: '',\n              email: '',\n              pan: '',\n              aadhaar: '',\n            }}\n            validateOnBlur\n            validateOnChange={false}\n            validationSchema={Yup.object({\n              pan: Yup.string().min(10, 'Enter a valid PAN Card Number'),\n              aadhaar: Yup.string().matches(/[0-9]-/, {\n                excludeEmptyString: true,\n                message: 'Enter a valid Aadhaar Number',\n              }),\n            })}\n            onSubmit={onSubmit}\n          >\n            {({ values, handleChange, errors }) => (\n              <Form noValidate>\n                <Stack {...formProps} horizontal>\n                  <TextField\n                    disabled={isLoading || formDisabled}\n                    name=\"firstName\"\n                    label=\"First Name\"\n                    maxLength={30}\n                    required\n                    placeholder=\"First Name\"\n                    autoFocus\n                    autoComplete=\"off\"\n                    style={{ width: '230px' }}\n                    onChange={handleChange}\n                    errorMessage={errors.firstName}\n                  />\n                  <TextField\n                    disabled={isLoading || formDisabled}\n                    name=\"middleName\"\n                    maxLength={30}\n                    label=\"Middle Name\"\n                    placeholder=\"Middle Name\"\n                    autoComplete=\"off\"\n                    style={{ width: '230px' }}\n                    onChange={handleChange}\n                    errorMessage={errors.middleName}\n                  />\n                  <TextField\n                    disabled={isLoading || formDisabled}\n                    name=\"lastName\"\n                    maxLength={30}\n                    required\n                    label=\"Last Name\"\n                    placeholder=\"Last Name\"\n                    autoComplete=\"off\"\n                    style={{ width: '230px' }}\n                    onChange={handleChange}\n                    errorMessage={errors.lastName}\n                  />\n                </Stack>\n\n                <Stack {...formProps} horizontal>\n                  <TextField\n                    disabled={isLoading || formDisabled}\n                    name=\"phone\"\n                    type=\"number\"\n                    label=\"Phone Number\"\n                    required\n                    placeholder=\"10 Digit Phone Number\"\n                    autoComplete=\"off\"\n                    style={{ width: '230px' }}\n                    onChange={handleChange}\n                    errorMessage={errors.phone}\n                  />\n                  <TextField\n                    disabled={isLoading || formDisabled}\n                    name=\"email\"\n                    label=\"Email\"\n                    maxLength={100}\n                    placeholder=\"Email\"\n                    autoComplete=\"off\"\n                    style={{ width: '230px' }}\n                    onChange={handleChange}\n                    errorMessage={errors.email}\n                  />\n                </Stack>\n\n                <Stack {...formProps} horizontal>\n                  <MaskedTextField\n                    disabled={isLoading || formDisabled}\n                    name=\"aadhaar\"\n                    mask=\"9999-9999-9999\"\n                    label=\"Aadhaar Number\"\n                    required\n                    placeholder=\"999999999999\"\n                    autoComplete=\"off\"\n                    style={{ width: '230px' }}\n                    onChange={handleChange}\n                    errorMessage={errors.aadhaar}\n                  />\n                  <TextField\n                    disabled={isLoading || formDisabled}\n                    name=\"pan\"\n                    type=\"text\"\n                    label=\"PAN Card Number\"\n                    maxLength={10}\n                    required\n                    autoComplete=\"off\"\n                    placeholder=\"ABCDE11223\"\n                    style={{ width: '230px', textTransform: 'uppercase' }}\n                    onChange={handleChange}\n                    errorMessage={errors.pan}\n                  />\n                </Stack>\n\n                <PrimaryButton\n                  text=\"CREATE\"\n                  type=\"submit\"\n                  disabled={isLoading || formDisabled}\n                  style={{ width: '230px', marginTop: '30px' }}\n                />\n              </Form>\n            )}\n          </Formik>\n          {isLoading && (\n            <Spinner\n              style={{ marginTop: '10px' }}\n              label=\"Creating User...\"\n              labelPosition=\"right\"\n            />\n          )}\n          {!isLoading && message.success && (\n            <>\n              <MessageBar\n                messageBarType={MessageBarType.success}\n                style={{ fontSize: '16px' }}\n              >\n                Created the user successfully.\n              </MessageBar>\n\n              <PrimaryButton\n                text=\"NEXT\"\n                style={{ width: '230px', marginTop: '30px' }}\n                onClick={() => {\n                  history.push(`/bank/dashboard/user/update/${id}`);\n                }}\n              />\n            </>\n          )}\n\n          {!isLoading && message.success === false && (\n            <MessageBar\n              messageBarType={MessageBarType.warning}\n              style={{ fontSize: '16px' }}\n            >\n              Unable to create the user. Please try again later.\n            </MessageBar>\n          )}\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default BankUserCreate;\n","import axios from '../../axios';\n\nexport const login = (data) => {\n  return axios({\n    method: 'POST',\n    url: '/login',\n    data,\n  });\n};\n\nexport const getUserPolicies = () => {\n  return axios({\n    method: 'get',\n    url: `/getPolicies`,\n  });\n};\n\nexport const createUser = (data) => {\n  return axios({\n    method: 'POST',\n    url: `/person`,\n    data,\n  });\n};\n","import React, { useState } from 'react';\nimport {\n  Stack,\n  PrimaryButton,\n  MessageBar,\n  MessageBarType,\n} from '@fluentui/react';\nimport { Container, Row, Col } from 'reactstrap';\nimport UserSearch from '../../../common/user-search/user-search';\nimport UserCard from '../../../common/user-card/user-card';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nconst columnProps = {\n  tokens: { childrenGap: 15 },\n  styles: {\n    root: {\n      width: 800,\n      backgroundColor: '#fff',\n      padding: '40px',\n      margin: '20px auto',\n    },\n  },\n};\n\nconst BankUserUpdate = () => {\n  const history = useHistory();\n  const { path } = useRouteMatch();\n  const [searchResult, setSearchResult] = useState({\n    success: true,\n  });\n\n  const onSearch = (value) => {\n    setSearchResult(value);\n  };\n\n  return (\n    <>\n      <Container>\n        <Stack {...columnProps} className=\"hc-shadow\">\n          <UserSearch onSearch={onSearch}></UserSearch>\n          {!searchResult.success && (\n            <>\n              <MessageBar\n                messageBarType={MessageBarType.warning}\n                style={{ fontSize: '16px' }}\n              >\n                Unable to find the user with provided info.\n              </MessageBar>\n\n              <PrimaryButton\n                text=\"CREATE NEW USER\"\n                style={{ width: '180px', marginTop: '30px' }}\n                onClick={() => {\n                  history.push(`${path}/user/new`);\n                }}\n              />\n            </>\n          )}\n        </Stack>\n      </Container>\n      {searchResult?.user?.id && (\n        <Stack {...columnProps} className=\"hc-shadow\">\n          <UserCard details={searchResult.user} />\n          {searchResult?.user?.isAlive && (\n            <Row>\n              <Col sm={8}></Col>\n              <Col sm={4} style={{ textAlign: 'right' }}>\n                <PrimaryButton\n                  text=\"NEXT\"\n                  style={{ width: '180px' }}\n                  onClick={() => {\n                    history.push(`${path}/user/new`);\n                  }}\n                />\n              </Col>\n            </Row>\n          )}\n        </Stack>\n      )}\n    </>\n  );\n};\n\nexport default BankUserUpdate;\n","import React, { useState } from 'react';\nimport { CommandBar } from '@fluentui/react';\nimport { useGetUser } from '../../hooks/useGetUser';\nimport BankUserSearch from './bank-user-search/bank-user-search';\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom';\nimport { logout } from '../../utils/token';\nimport BankUserCreate from './bank-user-create/bank-user-create';\nimport BankUserUpdate from './bank-user-update/bank-user-update';\n\nconst BankDashboard = () => {\n  const [, setRefresh] = useState(false);\n  const { path } = useRouteMatch();\n  const { user } = useGetUser();\n  const items = [\n    {\n      key: 'tile',\n      text: 'Bank Dashboard',\n      style: { fontSize: '16px' },\n      iconProps: { iconName: 'Bank' },\n    },\n  ];\n  const farItems = [\n    {\n      key: 'user',\n      text: `${user?.firstName} ${user?.lastName}`,\n      iconProps: { iconName: 'contact' },\n      subMenuProps: {\n        items: [\n          {\n            key: 'logout',\n            text: 'Logout',\n            iconProps: { iconName: 'FollowUser' },\n            onClick: () => {\n              logout();\n              setRefresh();\n            },\n          },\n        ],\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <CommandBar items={items} farItems={farItems} className=\"hc-shadow\" />\n      <Switch>\n        <Route\n          path={`${path}/user/new`}\n          render={(props) => <BankUserCreate {...props} />}\n        />\n        <Route\n          path={`${path}/user/update/:id`}\n          render={(props) => <BankUserUpdate {...props} />}\n        />\n        <Route\n          path={`${path}`}\n          render={(props) => <BankUserSearch {...props} />}\n        />\n      </Switch>\n      {!user && <Redirect to={`/bank/login`} />}\n    </div>\n  );\n};\n\nexport default BankDashboard;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Login from '../login/login';\nimport BankDashboard from './bank-dashboard';\n\nconst Bank = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <div>\n      <Switch>\n        <Route\n          path={`${path}/login`}\n          render={(props) => (\n            <Login {...props} type=\"bank\" header=\"Bank Login\" />\n          )}\n        />\n        <Route\n          path={`${path}/dashboard`}\n          render={(props) => <BankDashboard {...props} />}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Bank;\n","import axios from '../../../axios';\n\nexport const confirmUserDeath = (dod, id) => {\n  return axios({\n    method: 'POST',\n    url: 'person/death',\n    data: { dod, id },\n  });\n};\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DatePicker,\n  DialogFooter,\n  DefaultButton,\n  PrimaryButton,\n  DialogType,\n  Spinner,\n} from '@fluentui/react';\nimport { confirmUserDeath } from '../user-death/user-death.api';\n\nconst modalProps = {\n  isBlocking: true,\n  styles: { main: { width: '600px' } },\n};\n\nconst dialogContentProps = {\n  type: DialogType.normal,\n  title: 'Confirm Death',\n  subText: 'Please select Date of Death and confirm.',\n};\n\nconst DeathDialog = ({ showDialog, setShowDialog, userId, onConfirm }) => {\n  const [dod, setDod] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const confirmDeath = async () => {\n    if (dod && userId) {\n      try {\n        setIsLoading(true);\n        const resp = await confirmUserDeath(dod, userId);\n\n        if (resp.status === 200) {\n          setIsLoading(false);\n          onConfirm({ success: true });\n        }\n      } catch (error) {\n        setIsLoading(false);\n        onConfirm({ success: false });\n      }\n    }\n  };\n\n  return (\n    <Dialog\n      hidden={!showDialog}\n      onDismiss={() => {\n        if (!isLoading) {\n          setShowDialog(false);\n        }\n      }}\n      dialogContentProps={dialogContentProps}\n      modalProps={modalProps}\n    >\n      <DatePicker\n        isRequired\n        label=\"Date of Death\"\n        disabled={isLoading}\n        maxDate={new Date()}\n        value={dod ? new Date(dod) : ''}\n        placeholder=\"Select a date...\"\n        onSelectDate={(date) => {\n          const isoDate = date.toISOString();\n          setDod(isoDate);\n        }}\n      />\n      {isLoading && (\n        <Spinner\n          style={{ marginTop: '10px' }}\n          label=\"Processing the request...\"\n          labelPosition=\"right\"\n        />\n      )}\n      <DialogFooter>\n        <DefaultButton\n          disabled={isLoading}\n          onClick={() => {\n            setShowDialog(false);\n          }}\n          text=\"Cancel\"\n        />\n        <PrimaryButton\n          onClick={confirmDeath}\n          text=\"Confirm\"\n          disabled={isLoading}\n        />\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport default DeathDialog;\n","import React, { useState } from 'react';\nimport {\n  Stack,\n  PrimaryButton,\n  MessageBar,\n  MessageBarType,\n} from '@fluentui/react';\nimport { Container, Row, Col } from 'reactstrap';\nimport UserSearch from '../../../common/user-search/user-search';\nimport UserCard from '../../../common/user-card/user-card';\n\nimport './govt-user-search.css';\nimport DeathDialog from '../death-dialog/death-dialog';\n\nconst columnProps = {\n  tokens: { childrenGap: 15 },\n  styles: {\n    root: {\n      width: 800,\n      backgroundColor: '#fff',\n      padding: '40px',\n      margin: '20px auto',\n    },\n  },\n};\n\nconst GovtUserSearch = () => {\n  const [searchResult, setSearchResult] = useState({\n    success: true,\n  });\n  const [isSuccessful, setIsSuccessful] = useState(false);\n\n  const [showDialog, setShowDialog] = useState(false);\n\n  const onSearch = (value) => {\n    setSearchResult(value);\n  };\n\n  return (\n    <>\n      <Container>\n        <Stack {...columnProps} className=\"hc-shadow\">\n          <UserSearch onSearch={onSearch}></UserSearch>\n          {!searchResult.success && (\n            <>\n              <MessageBar\n                messageBarType={MessageBarType.warning}\n                style={{ fontSize: '16px' }}\n              >\n                Unable to find the user with provided info. Please enter correct\n                info and try again.\n              </MessageBar>\n            </>\n          )}\n        </Stack>\n      </Container>\n      {isSuccessful && (\n        <Container style={{ padding: '0 80px' }}>\n          <MessageBar\n            messageBarType={MessageBarType.success}\n            style={{ fontSize: '16px' }}\n          >\n            Action was successful.\n          </MessageBar>\n        </Container>\n      )}\n      {searchResult?.user?.id && !isSuccessful && (\n        <Stack {...columnProps} className=\"hc-shadow\">\n          <UserCard details={searchResult.user} />\n          {searchResult?.user?.isAlive && (\n            <Row>\n              <Col sm={8}></Col>\n              <Col sm={4} style={{ textAlign: 'right' }}>\n                <PrimaryButton\n                  text=\"DECLARE DEAD\"\n                  style={{ width: '180px' }}\n                  onClick={() => {\n                    setShowDialog(true);\n                  }}\n                />\n              </Col>\n            </Row>\n          )}\n        </Stack>\n      )}\n\n      <DeathDialog\n        showDialog={showDialog}\n        setShowDialog={setShowDialog}\n        userId={searchResult?.user?.id}\n        onConfirm={(value) => {\n          setIsSuccessful(value.success);\n          setTimeout(() => {\n            setIsSuccessful(false);\n            setSearchResult({ success: true });\n          }, 10000);\n          setShowDialog(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default GovtUserSearch;\n","import React, { useState } from 'react';\nimport { CommandBar } from '@fluentui/react';\nimport { useGetUser } from '../../hooks/useGetUser';\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom';\nimport GovtUserSearch from './govt-user-search/govt-user-search';\nimport { logout } from '../../utils/token';\n\nconst GovtDashboard = () => {\n  const [, setRefresh] = useState(false);\n  const { path } = useRouteMatch();\n  const { user } = useGetUser();\n  const items = [\n    {\n      key: 'tile',\n      style: { fontSize: '16px' },\n      text: 'Govt Dashboard',\n      iconProps: { iconName: 'CityNext' },\n    },\n  ];\n  const farItems = [\n    {\n      key: 'user',\n      text: `${user?.firstName} ${user?.lastName}`,\n      iconProps: { iconName: 'contact' },\n      subMenuProps: {\n        items: [\n          {\n            key: 'logout',\n            text: 'Logout',\n            iconProps: { iconName: 'FollowUser' },\n            onClick: () => {\n              logout();\n              setRefresh(true);\n            },\n          },\n        ],\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <CommandBar items={items} farItems={farItems} />\n      <Switch>\n        <Route\n          path={`${path}`}\n          render={(props) => <GovtUserSearch {...props} />}\n        />\n      </Switch>\n      {!user && <Redirect to={`/govt/login`} />}\n    </div>\n  );\n};\n\nexport default GovtDashboard;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Login from '../login/login';\nimport GovtDashboard from './govt-dashboard';\n\nconst Govt = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <div>\n      <Switch>\n        <Route\n          path={`${path}/login`}\n          render={(props) => (\n            <Login {...props} type=\"govt\" header=\"Govt Login\" />\n          )}\n        />\n        <Route\n          path={`${path}/dashboard`}\n          render={(props) => <GovtDashboard {...props} />}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Govt;\n","import React, { useState } from 'react';\nimport { CommandBar } from '@fluentui/react';\nimport { useGetUser } from '../../hooks/useGetUser';\nimport { logout } from '../../utils/token';\nimport { Redirect } from 'react-router-dom';\n\nconst UserDashboard = () => {\n  const [, setRefresh] = useState(false);\n  const { user } = useGetUser();\n  const items = [\n    {\n      key: 'tile',\n      style: { fontSize: '16px' },\n      text: 'User Dashboard',\n      iconProps: { iconName: 'contact' },\n    },\n  ];\n  const farItems = [\n    {\n      key: 'user',\n      text: `${user?.firstName} ${user?.lastName}`,\n      iconProps: { iconName: 'contact' },\n      subMenuProps: {\n        items: [\n          {\n            key: 'logout',\n            text: 'Logout',\n            iconProps: { iconName: 'FollowUser' },\n            onClick: () => {\n              logout();\n              setRefresh(true);\n            },\n          },\n        ],\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <CommandBar items={items} farItems={farItems} />\n      <div>user dashboard</div>\n      {!user && <Redirect to={`/user/login`} />}\n    </div>\n  );\n};\n\nexport default UserDashboard;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Login from '../login/login';\nimport UserDashboard from './user-dashboard';\n\nconst User = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <div>\n      <Switch>\n        <Route\n          path={`${path}/login`}\n          render={(props) => (\n            <Login {...props} type=\"user\" header=\"User Login\" />\n          )}\n        />\n        <Route\n          path={`${path}/dashboard`}\n          render={(props) => <UserDashboard {...props} />}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  BrowserRouter as Router,\n} from 'react-router-dom';\n\nimport { initializeIcons } from '@uifabric/icons';\nimport './App.css';\n\nimport Bank from './features/bank/bank';\nimport Govt from './features/govt/govt';\nimport User from './features/user/user';\n\ninitializeIcons();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/bank\">\n            <Bank />\n          </Route>\n          <Route path=\"/user\">\n            <User />\n          </Route>\n          <Route path=\"/govt\">\n            <Govt />\n          </Route>\n          <Route path=\"*\" render={() => <Redirect to=\"/user/login\" />}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}